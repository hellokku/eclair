#!/usr/bin/env ruby
# frozen_string_literal: true

require "eclair"
require "eclair/grid"

Eclair.init_config
Curses.init_screen
Curses.stdscr.timeout = 100
Curses.stdscr.keypad = true
Curses.start_color
Curses.use_default_colors
Curses.crmode
Curses.noecho
Curses.ESCDELAY = 25
trap("INT") { exit }

# logger
Eclair.logger.level = Logger.const_get(Eclair.config.loglevel.to_s.upcase) rescue Logger::INFO
STDOUT.puts "Eclair is initialized."


if ARGV.empty?
  grid = Eclair::Grid.new
else
  grid = Eclair::Grid.new(ARGV[0])
end

loop do
  case grid.mode
  when :nav, :sel
    Curses.curs_set(0)
    case k = Curses.stdscr.getch
    when Curses::KEY_RESIZE
      grid.resize
    when Curses::KEY_LEFT, Curses::KEY_RIGHT, Curses::KEY_UP, Curses::KEY_DOWN, ?h, ?j, ?k, ?l
      grid.move(k)
    when " "
      grid.space
    when 10 # enter
      grid.action
    when "/"
      grid.start_search
      grid.clear_search
    when "!"
      Curses.close_screen
      require 'pry'
      binding.pry
      exit
    when ?q
      exit
    when 27 # escape
      grid.clear_search
    end
  when :search
    Curses.curs_set(1)
    case k = Curses.stdscr.getch
    when Curses::KEY_RESIZE
      grid.resize
    when 10 # enter
      grid.end_search
    when 27 # escape
      grid.clear_search
      grid.end_search
    else
      grid.append_search(k)
    end
  end
end
